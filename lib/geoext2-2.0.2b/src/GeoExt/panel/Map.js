Ext.define("GeoExt.panel.Map",{extend:"Ext.panel.Panel",requires:["GeoExt.data.LayerStore"],alias:"widget.gx_mappanel",alternateClassName:"GeoExt.MapPanel",statics:{guess:function(){var n=Ext.ComponentQuery.query("gx_mappanel");return n&&n.length>0?n[0]:null}},center:null,zoom:null,extent:null,prettyStateKeys:!1,map:null,layout:"fit",layers:null,stateEvents:["aftermapmove","afterlayervisibilitychange","afterlayeropacitychange","afterlayerorderchange","afterlayernamechange","afterlayeradd","afterlayerremove"],mapRendered:!1,initComponent:function(){this.map instanceof OpenLayers.Map||(this.map=new OpenLayers.Map(Ext.applyIf(this.map||{},{allOverlays:!0,fallThrough:!0})));this.map.fallThrough!==!0&&this.warnMapFallThrough();var n=this.layers;(!n||n instanceof Array)&&(this.layers=Ext.create("GeoExt.data.LayerStore",{layers:n,map:this.map.layers.length>0?this.map:null}));Ext.isString(this.center)?this.center=OpenLayers.LonLat.fromString(this.center):Ext.isArray(this.center)&&(this.center=new OpenLayers.LonLat(this.center[0],this.center[1]));Ext.isString(this.extent)?this.extent=OpenLayers.Bounds.fromString(this.extent):Ext.isArray(this.extent)&&(this.extent=OpenLayers.Bounds.fromArray(this.extent));this.callParent(arguments);this.on("resize",this.onResize,this);this.on("afterlayout",function(){typeof this.map.getViewport=="function"&&this.items.each(function(n){typeof n.addToMapPanel=="function"&&n.getEl().appendTo(this.body)},this)},this);this.map.events.on({moveend:this.onMoveend,changelayer:this.onChangelayer,addlayer:this.onAddlayer,removelayer:this.onRemovelayer,scope:this})},warnMapFallThrough:function(){Ext.log({level:"warn",msg:"It is recommended to construct a GeoExt.panel.Map with OpenLayers.Map#fallThrough == true. This way dragging interactions with floating components (e.g. Ext.window.Window) on top of the map are smoother."})},onMoveend:function(n){this.fireEvent("aftermapmove",this,this.map,n)},onChangelayer:function(n){var t=this.map;n.property&&(n.property==="visibility"?this.fireEvent("afterlayervisibilitychange",this,t,n):n.property==="order"?this.fireEvent("afterlayerorderchange",this,t,n):n.property==="name"?this.fireEvent("afterlayernamechange",this,t,n):n.property==="opacity"&&this.fireEvent("afterlayeropacitychange",this,t,n))},onAddlayer:function(){this.fireEvent("afterlayeradd")},onRemovelayer:function(){this.fireEvent("afterlayerremove")},onResize:function(){var n=this.map;if(this.mapRendered||this.body.dom===n.div)n.updateSize();else if(n.render(this.body.dom),this.mapRendered=!0,this.layers.bind(n),n.layers.length>0)this.setInitialExtent();else this.layers.on("add",this.setInitialExtent,this,{single:!0})},setInitialExtent:function(){var n=this.map;n.getCenter()||(this.center||this.zoom?n.setCenter(this.center,this.zoom):this.extent instanceof OpenLayers.Bounds?n.zoomToExtent(this.extent,!0):n.zoomToMaxExtent())},getState:function(){var n=this,u=n.map,t=n.callParent(arguments)||{},i,r;if(u)return r=u.getCenter(),r&&Ext.applyIf(t,{x:r.lon,y:r.lat,zoom:u.getZoom()}),n.layers.each(function(r){i=r.getLayer();layerId=this.prettyStateKeys?r.get("title"):r.get("id");t=n.addPropertyToState(t,"visibility_"+layerId,i.getVisibility());t=n.addPropertyToState(t,"opacity_"+layerId,i.opacity===null?1:i.opacity)},n),t},applyState:function(n){var r=this,t,u,i,f;map=r.map;r.center=new OpenLayers.LonLat(n.x,n.y);r.zoom=n.zoom;r.layers.each(function(e){t=e.getLayer();u=r.prettyStateKeys?t.name:t.id;i=n["visibility_"+u];i!==undefined&&(i=/^true$/i.test(i),t.isBaseLayer?i&&map.setBaseLayer(t):t.setVisibility(i));f=n["opacity_"+u];f!==undefined&&t.setOpacity(f)})},onBeforeAdd:function(n){Ext.isFunction(n.addToMapPanel)&&n.addToMapPanel(this);this.callParent(arguments)},beforeDestroy:function(){this.map&&this.map.events&&this.map.events.un({moveend:this.onMoveend,changelayer:this.onChangelayer,scope:this});this.initialConfig.map&&this.initialConfig.map instanceof OpenLayers.Map||this.map&&this.map.destroy&&this.map.destroy();delete this.map;this.callParent(arguments)}})