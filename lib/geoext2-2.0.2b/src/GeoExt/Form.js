(function(){var n={eq:OpenLayers.Filter.Comparison.EQUAL_TO,ne:OpenLayers.Filter.Comparison.NOT_EQUAL_TO,lt:OpenLayers.Filter.Comparison.LESS_THAN,le:OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,gt:OpenLayers.Filter.Comparison.GREATER_THAN,ge:OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,like:OpenLayers.Filter.Comparison.LIKE},t={text:new RegExp("^(text|string)$","i"),number:new RegExp("^(number|float|decimal|double|int|long|integer|short)$","i"),boolean:new RegExp("^(boolean)$","i"),date:new RegExp("^(date|dateTime)$","i")};Ext.define("GeoExt.Form",{requires:["GeoExt.Version"],singleton:!0,ENDS_WITH:1,STARTS_WITH:2,CONTAINS:3,toFilter:function(t,i,r){var f,h,e,o,u,s;t instanceof Ext.form.Panel&&(t=t.getForm());f=[];h=t.getValues(!1);for(e in h){if(o=e.split("__"),u=h[e],o.length>1&&(s=n[o[1]])!==undefined?e=o[0]:s=OpenLayers.Filter.Comparison.EQUAL_TO,s===OpenLayers.Filter.Comparison.LIKE)switch(r){case GeoExt.Form.ENDS_WITH:u=".*"+u;break;case GeoExt.Form.STARTS_WITH:u+=".*";break;case GeoExt.Form.CONTAINS:u=".*"+u+".*"}f.push(new OpenLayers.Filter.Comparison({type:s,value:u,property:e}))}return f.length==1&&i!=OpenLayers.Filter.Logical.NOT?f[0]:new OpenLayers.Filter.Logical({type:i||OpenLayers.Filter.Logical.AND,filters:f})},recordToField:function(n,i){var r,l,o,s,a,v,y,p,w;if(i=i||{},r=n.get("type"),typeof r=="object"&&r.xtype)return r;r=r.split(":").pop();var e,c=n.get("name"),u=n.get("restriction")||{},b=n.get("nillable")||!1,f=n.get("label"),h=i.labelTpl;return h?(l=h instanceof Ext.Template?h:new Ext.XTemplate(h),f=l.apply(n.data)):f==null&&(f=c),o={name:c,labelStyle:b?"":i.mandatoryFieldLabelStyle!=null?i.mandatoryFieldLabelStyle:"font-weight:bold;"},s=t,u.enumeration?e=Ext.apply({xtype:"combo",fieldLabel:f,mode:"local",forceSelection:!0,triggerAction:"all",editable:!1,store:u.enumeration},o):r.match(s.text)?(a=u.maxLength!==undefined?parseFloat(u.maxLength):undefined,v=u.minLength!==undefined?parseFloat(u.minLength):undefined,e=Ext.apply({xtype:"textfield",fieldLabel:f,maxLength:a,minLength:v},o)):r.match(s.number)?(y=u.maxInclusive!==undefined?parseFloat(u.maxInclusive):undefined,p=u.minInclusive!==undefined?parseFloat(u.minInclusive):undefined,e=Ext.apply({xtype:"numberfield",fieldLabel:f,maxValue:y,minValue:p},o)):r.match(s.boolean)?(e=Ext.apply({xtype:"checkbox"},o),w=i.checkboxLabelProperty||"boxLabel",e[w]=f):r.match(s.date)&&(e=Ext.apply({xtype:"datefield",fieldLabel:f,format:"c"},o)),e}})})()