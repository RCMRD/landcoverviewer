Ext.define("GeoExt.container.VectorLegend",{extend:"GeoExt.container.LayerLegend",alias:"widget.gx_vectorlegend",requires:["Ext.layout.container.Column","GeoExt.FeatureRenderer"],alternateClassName:"GeoExt.VectorLegend",statics:{supports:function(n){return n.getLayer()instanceof OpenLayers.Layer.Vector?1:0}},layerRecord:null,layer:null,rules:null,symbolType:null,untitledPrefix:"Untitled ",clickableSymbol:!1,clickableTitle:!1,selectOnClick:!1,enableDD:!1,bodyBorder:!1,feature:null,selectedRule:null,currentScaleDenominator:null,initComponent:function(){var t=this,n;if(t.callParent(),this.layerRecord&&(this.layer=this.layerRecord.getLayer(),this.layer&&this.layer.map)){this.map=this.layer.map;this.currentScaleDenominator=this.map.getScale();this.map.events.on({zoomend:this.onMapZoom,scope:this})}if(!this.symbolType)if(this.feature)this.symbolType=this.symbolTypeFromFeature(this.feature);else if(this.layer)if(this.layer.features.length>0)n=this.layer.features[0].clone(),n.attributes={},this.feature=n,this.symbolType=this.symbolTypeFromFeature(this.feature);else this.layer.events.on({featuresadded:this.onFeaturesAdded,scope:this});this.layer&&this.feature&&!this.rules&&this.setRules();this.rulesContainer=new Ext.container.Container({autoEl:{}});this.add(this.rulesContainer);this.addEvents("titleclick","symbolclick","ruleclick","ruleselected","ruleunselected","rulemoved");this.update()},onMapZoom:function(){this.setCurrentScaleDenominator(this.map.getScale())},symbolTypeFromFeature:function(n){var t=n.geometry.CLASS_NAME.match(/Point|Line|Polygon/);return t&&t[0]||"Point"},onFeaturesAdded:function(){this.layer.events.un({featuresadded:this.onFeaturesAdded,scope:this});var n=this.layer.features[0].clone();n.attributes={};this.feature=n;this.symbolType=this.symbolTypeFromFeature(this.feature);this.rules||this.setRules();this.update()},setRules:function(){var n=this.layer.styleMap&&this.layer.styleMap.styles["default"];n||(n=new OpenLayers.Style);this.rules=n.rules.length===0?[new OpenLayers.Rule({title:n.title,symbolizer:n.createSymbolizer(this.feature)})]:n.rules},setCurrentScaleDenominator:function(n){n!==this.currentScaleDenominator&&(this.currentScaleDenominator=n,this.update())},getRuleEntry:function(n){var t=Ext.Array.indexOf(this.rules,n);return this.rulesContainer.items.get(t)},addRuleEntry:function(n,t){this.rulesContainer.add(this.createRuleEntry(n));t||this.doLayout()},removeRuleEntry:function(n,t){var i=this.getRuleEntry(n);i&&(this.rulesContainer.remove(i),t||this.doLayout())},selectRuleEntry:function(n){var i=n!=this.selectedRule,t;this.selectedRule&&this.unselect();i&&(t=this.getRuleEntry(n),t.body.addCls("x-boundlist-selected"),this.selectedRule=n,this.fireEvent("ruleselected",this,n))},unselect:function(){this.rulesContainer.items.each(function(n,t){this.rules[t]==this.selectedRule&&(n.body.removeCls("x-boundlist-selected"),this.selectedRule=null,this.fireEvent("ruleunselected",this,this.rules[t]))},this)},createRuleEntry:function(n){var t=!0;return this.currentScaleDenominator!=null&&(n.minScaleDenominator&&(t=t&&this.currentScaleDenominator>=n.minScaleDenominator),n.maxScaleDenominator&&(t=t&&this.currentScaleDenominator<n.maxScaleDenominator)),{xtype:"panel",layout:"column",border:!1,hidden:!t,bodyStyle:this.selectOnClick?{cursor:"pointer"}:undefined,defaults:{border:!1},items:[this.createRuleRenderer(n),this.createRuleTitle(n)],listeners:{render:function(t){this.selectOnClick&&t.getEl().on({click:function(){this.selectRuleEntry(n)},scope:this});this.enableDD==!0&&this.addDD(t)},scope:this}}},createRuleRenderer:function(n){var f=[this.symbolType,"Point","Line","Polygon"],i,o,r=n.symbolizers,t,h,u,s,e,c;if(r){n:for(t=0,ii=f.length;t<ii;++t)if(i=f[t],s=OpenLayers.Symbolizer[i],s)for(e=0,c=r.length;e<c;++e)if(r[e]instanceof s){o=!0;break n}}else{for(u=n.symbolizer,t=0,h=f.length;t<h;++t)if(i=f[t],u[i]){u=u[i];o=!0;break}r=[u]}return{xtype:"gx_renderer",symbolType:o?i:this.symbolType,symbolizers:r,style:this.clickableSymbol?{cursor:"pointer"}:undefined,listeners:{click:function(){this.clickableSymbol&&(this.fireEvent("symbolclick",this,n),this.fireEvent("ruleclick",this,n))},scope:this}}},createRuleTitle:function(n){return{cls:"x-form-item",style:"padding: 0.2em 0.5em 0;",bodyStyle:Ext.applyIf({background:"transparent"},this.clickableTitle?{cursor:"pointer"}:undefined),html:this.getRuleTitle(n),listeners:{render:function(t){this.clickableTitle&&t.getEl().on({click:function(){this.fireEvent("titleclick",this,n);this.fireEvent("ruleclick",this,n)},scope:this})},scope:this}}},addDD:function(n){var t=n.ownerCt,i=this;new Ext.dd.DragSource(n.getEl(),{ddGroup:t.id,onDragOut:function(n,t){var i=Ext.getCmp(t);return i.removeCls("gx-ruledrag-insert-above"),i.removeCls("gx-ruledrag-insert-below"),Ext.dd.DragZone.prototype.onDragOut.apply(this,arguments)},onDragEnter:function(i,r){var f=Ext.getCmp(r),u,e=Ext.Array.indexOf(t.items,n),o=Ext.Array.indexOf(t.items,f);return e>o?u="gx-ruledrag-insert-above":e<o&&(u="gx-ruledrag-insert-below"),u&&f.addCls(u),Ext.dd.DragZone.prototype.onDragEnter.apply(this,arguments)},onDragDrop:function(r,u){var f=Ext.Array.indexOf,e=f(t.items,n),o=f(t.items,Ext.getCmp(u));return i.moveRule(e,o),Ext.dd.DragZone.prototype.onDragDrop.apply(this,arguments)},getDragData:function(n){var t=n.getTarget(".x-column-inner"),i;if(t)return i=t.cloneNode(!0),i.id=Ext.id(),{sourceEl:t,repairXY:Ext.fly(t).getXY(),ddel:i}}});new Ext.dd.DropTarget(n.getEl(),{ddGroup:t.id,notifyDrop:function(){return!0}})},update:function(){if(this.callParent(arguments),this.symbolType&&this.rules){this.rulesContainer.removeAll(!1);for(var n=0,t=this.rules.length;n<t;++n)this.addRuleEntry(this.rules[n],!0);this.doLayout();this.selectedRule&&this.getRuleEntry(this.selectedRule).body.addCls("x-boundlist-selected")}},updateRuleEntry:function(n){var t=this.getRuleEntry(n);t&&(t.removeAll(),t.add(this.createRuleRenderer(n)),t.add(this.createRuleTitle(n)),t.doLayout())},moveRule:function(n,t){var i=this.rules[n];this.rules.splice(n,1);this.rules.splice(t,0,i);this.update();this.fireEvent("rulemoved",this,i)},getRuleTitle:function(n){var t=n.title||n.name||"";return!t&&this.untitledPrefix&&(t=this.untitledPrefix+(Ext.Array.indexOf(this.rules,n)+1)),t},beforeDestroy:function(){this.layer&&(this.layer.events&&this.layer.events.un({featuresadded:this.onFeaturesAdded,scope:this}),this.map&&this.map.events&&this.map.events.un({zoomend:this.onMapZoom,scope:this}));delete this.layer;delete this.map;delete this.rules;this.callParent(arguments)},onStoreRemove:function(n,t){t.getLayer()===this.layer&&this.map&&this.map.events&&this.map.events.un({zoomend:this.onMapZoom,scope:this})},onStoreAdd:function(n,t){for(var u,i=0,r=t.length;i<r;i++)if(u=t[i],u.getLayer()===this.layer&&this.map&&this.map.events)this.map.events.on({zoomend:this.onMapZoom,scope:this})}},function(){GeoExt.container.LayerLegend.types.gx_vectorlegend=GeoExt.container.VectorLegend})