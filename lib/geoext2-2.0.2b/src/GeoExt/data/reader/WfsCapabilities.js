Ext.define("GeoExt.data.reader.WfsCapabilities",{alternateClassName:["GeoExt.data.reader.WFSCapabilities","GeoExt.data.WFSCapabilitiesReader"],extend:"Ext.data.reader.Json",alias:"reader.gx_wfscapabilities",requires:["GeoExt.Version"],constructor:function(n){this.model||(this.model="GeoExt.data.WfsCapabilitiesLayerModel");this.callParent([n]);this.format||(this.format=new OpenLayers.Format.WFSCapabilities)},getResponseData:function(n){var t=n.responseXML;return t&&t.documentElement||(t=n.responseText),this.readRecords(t)},readRecords:function(n){var l,a,f,b,e,k,r;(typeof n=="string"||n.nodeType)&&(n=this.format.read(n));var v=n.featureTypeList.featureTypes,y=this.getFields(),t,i,o,p,w,s,u,h,c;for(parseFloat(n.version)>=1.1?(c=n.operationsMetadata,h=c&&c.GetFeature.dcp.http.post[0].url):h=n.capability.request.getfeature.href.post,l={url:h},a=[],f=0,b=v.length;f<b;f++)if(t=v[f],t.name){for(i={},e=0,k=y.length;e<k;e++)o=y[e],p=t[o.name],i[o.name]=p;i.name=t.name;i.featureNS=t.featureNS;u={featureType:t.name,featureNS:t.featureNS};this.protocolOptions?Ext.apply(u,this.protocolOptions,l):Ext.apply(u,{},l);s={metadata:i,protocol:new OpenLayers.Protocol.WFS(u),strategies:[new OpenLayers.Strategy.Fixed],projection:t.srs};r=this.layerOptions;r&&Ext.apply(s,Ext.isFunction(r)?r():r);w=new OpenLayers.Layer.Vector(t.title||t.name,s);a.push(w)}return this.callParent([a])}})