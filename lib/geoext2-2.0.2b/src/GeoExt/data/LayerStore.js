Ext.define("GeoExt.data.LayerStore",{requires:["GeoExt.data.LayerModel"],extend:"Ext.data.Store",model:"GeoExt.data.LayerModel",statics:{MAP_TO_STORE:1,STORE_TO_MAP:2},map:null,constructor:function(n){var r=this,t,i;n=Ext.apply({},n);t=GeoExt.MapPanel&&n.map instanceof GeoExt.MapPanel?n.map.map:n.map;delete n.map;n.layers&&(n.data=n.layers);delete n.layers;i={initDir:n.initDir};delete n.initDir;r.callParent([n]);t&&this.bind(t,i)},bind:function(n,t){var i=this,r,u;if(!i.map){i.map=n;t=Ext.apply({},t);r=t.initDir;t.initDir==undefined&&(r=GeoExt.data.LayerStore.MAP_TO_STORE|GeoExt.data.LayerStore.STORE_TO_MAP);u=n.layers.slice(0);r&GeoExt.data.LayerStore.STORE_TO_MAP&&i.each(function(n){i.map.addLayer(n.getLayer())},i);r&GeoExt.data.LayerStore.MAP_TO_STORE&&i.loadRawData(u,!0);n.events.on({changelayer:i.onChangeLayer,addlayer:i.onAddLayer,removelayer:i.onRemoveLayer,scope:i});i.on({load:i.onLoad,clear:i.onClear,add:i.onAdd,remove:i.onRemove,update:i.onStoreUpdate,scope:i});i.data.on({replace:i.onReplace,scope:i});i.fireEvent("bind",i,n)}},unbind:function(){var n=this;n.map&&(n.map.events.un({changelayer:n.onChangeLayer,addlayer:n.onAddLayer,removelayer:n.onRemoveLayer,scope:n}),n.un("load",n.onLoad,n),n.un("clear",n.onClear,n),n.un("add",n.onAdd,n),n.un("remove",n.onRemove,n),n.un("update",n.onStoreUpdate,n),n.data.un("replace",n.onReplace,n),n.map=null)},onChangeLayer:function(n){var i=n.layer,r=this.findBy(function(n){return n.getLayer()===i}),t,u;r>-1&&(t=this.getAt(r),n.property==="order"?this._adding||this._removing||(u=this.map.getLayerIndex(i),u!==r&&(this._removing=!0,this.remove(t),delete this._removing,this._adding=!0,this.insert(u,[t]),delete this._adding)):n.property==="name"?t.set("title",i.name):this.fireEvent("update",this,t,Ext.data.Record.EDIT))},onAddLayer:function(n){var t=this,i;t._adding||(t._adding=!0,i=t.proxy.reader.read(n.layer),t.add(i.records),delete t._adding)},onRemoveLayer:function(n){if(this.map.unloadDestroy){if(!this._removing){var t=n.layer,i=this.getByLayer(t);i&&(this._removing=!0,this.remove(this.getByLayer(t)),delete this._removing)}}else this.unbind()},onLoad:function(n,t,i){var u,f,e,r;if(i){if(Ext.isArray(t)||(t=[t]),!this._addRecords){for(this._removing=!0,u=this.map.layers.length-1;u>=0;u--)this.map.removeLayer(this.map.layers[u]);delete this._removing}if(f=t.length,f>0){for(e=new Array(f),r=0;r<f;r++)e[r]=t[r].getLayer();this._adding=!0;this.map.addLayers(e);delete this._adding}}delete this._addRecords},onClear:function(){this._removing=!0;for(var n=this.map.layers.length-1;n>=0;n--)this.map.removeLayer(this.map.layers[n]);delete this._removing},onAdd:function(n,t,i){var u,r;if(!this._adding){for(this._adding=!0,r=t.length-1;r>=0;--r)u=t[r].getLayer(),this.map.addLayer(u),i!==this.map.layers.length-1&&this.map.setLayerIndex(u,i);delete this._adding}},onRemove:function(n,t){if(!this._removing){var i=t.getLayer();this.map.getLayer(i.id)!=null&&(this._removing=!0,this.removeMapLayer(t),delete this._removing)}},onStoreUpdate:function(n,t,i){if(i===Ext.data.Record.EDIT&&t.modified&&t.modified.title){var r=t.getLayer(),u=t.get("title");u!==r.name&&r.setName(u)}},removeMapLayer:function(n){this.map.removeLayer(n.getLayer())},onReplace:function(n,t){this.removeMapLayer(t)},getByLayer:function(n){var t=this.findBy(function(t){return t.getLayer()===n});if(t>-1)return this.getAt(t)},destroy:function(){this.unbind();this.callParent()},loadRecords:function(n,t){t&&t.addRecords&&(this._addRecords=!0);this.callParent(arguments)},loadRawData:function(n,t){var i=this,r=i.proxy.reader.read(n),u=r.records;r.success&&(i.totalCount=r.total,i.loadRecords(u,t?i.addRecordsOptions:undefined),i.fireEvent("load",i,u,!0))}})